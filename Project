import cv2


face_cap = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Open a video capture object (camera)
video_cap = cv2.VideoCapture(0)  

if not video_cap.isOpened():
    print("Error: Could not open video source.")
    exit()

while True:
    
    ret, video_data = video_cap.read()

    if not ret:
        print("Error: Failed to read frame.")
        break

    
    if video_data is None or video_data.size == 0:
        print("Error: Empty frame received.")
        break

    
    col = cv2.cvtColor(video_data, cv2.COLOR_BGR2GRAY)

    
    faces = face_cap.detectMultiScale(
        col,
        scaleFactor=1.1,   
        minNeighbors=5,    
        minSize=(30, 30),  
        flags=cv2.CASCADE_SCALE_IMAGE  
    )

    # Draw rectangles around the detected faces
    for (x, y, w, h) in faces:  # Use 'faces' as the variable name
        cv2.rectangle(video_data, (x, y), (x + w, y + h), (0, 255, 0), 2)

    
    cv2.imshow("video_live", video_data)

    # to come out of the face detection once q is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break


video_cap.release()
cv2.destroyAllWindows()
